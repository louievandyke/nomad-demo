---
- name: Create temporary download directory if it does not exist
  delegate_to: localhost
  become: no
  ansible.builtin.file:
    path: "{{ playbook_dir }}/.ansible_download_cache"
    state: directory
    mode: 0755

- block:
    - name: Determine latest GitHub release (local)
      delegate_to: localhost
      become: false
      ansible.builtin.uri:
        url: "https://api.github.com/repos/containous/traefik/releases/latest"
        body_format: json
      register: _github_release
      until: _github_release.status == 200
      retries: 5

    - name: Set traefik_version
      ansible.builtin.set_fact: traefik_version="{{ _github_release.json.tag_name | regex_replace('^v?(.*)$', '\\1') }}"

  when: (traefik_version is not defined) or (traefik_version == 'latest')
  run_once: true

- name: Download Traefik and verify SHA256 checksum
  delegate_to: localhost
  become: no
  ansible.builtin.get_url:
    url: "https://github.com/containous/traefik/releases/download/v{{ traefik_version }}/traefik_v{{ traefik_version }}_linux_arm64.tar.gz"
    dest: "{{ playbook_dir }}/.ansible_download_cache/traefik_v{{ traefik_version }}_linux_arm64.tar.gz"
    checksum: "sha256:https://github.com/containous/traefik/releases/download/v{{ traefik_version }}/traefik_v{{ traefik_version }}_checksums.txt"
    mode: 0644

- name: Extract Traefik
  ansible.builtin.unarchive:
    src: "{{ playbook_dir }}/.ansible_download_cache/traefik_v{{ traefik_version }}_linux_arm64.tar.gz"
    dest: /usr/bin
    exclude: [ CHANGELOG.md, LICENSE.md ]

- name: Create traefik user
  ansible.builtin.user:
    name: traefik
    create_home: no
    system: yes
    shell: /usr/bin/false
    state: present

- name: Create config directory
  ansible.builtin.file:
    path: /etc/traefik
    state: directory
    owner: traefik
    group: traefik
    mode: 0755

- name: Copy config
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/etc/traefik/{{ item }}"
    owner: traefik
    group: traefik
    mode: 0644
  loop:
    - dynamic_conf.yaml
    - traefik.yaml

- name: Copy systemd service
  ansible.builtin.copy:
    src: "traefik.service"
    dest: "/etc/systemd/system/traefik.service"
    mode: 0644

- name: Start traefik service
  ansible.builtin.systemd:
    name: traefik
    state: restarted
    daemon_reload: yes
    enabled: yes
